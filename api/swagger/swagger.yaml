swagger: "2.0"
info:
  version: "0.0.1"
  title: GTW IOT API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  
tags:
- name: asset
  description: Get Asset Info
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: data
  description: retrieve data from database
- name: device
  description: device info
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io

securityDefinitions:
  UserSecurity:
    type: apiKey
    in: header
    name: x-api-key
    
security:
  - UserSecurity: []
  
paths:
  /asset/getAsset:
    # binds a127 app logic to a route
    x-swagger-router-controller: asset
    get:
      tags:
      - asset
      summary: Retrieve list of assets
      description: Return list of assets by user id
      # used as the method name of the controller
      operationId: getAsset
      parameters:
        - name: userID
          in: query
          description: input user ID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/AssetModel"
              Count:
                type: integer
        # responses may fall through to errors
        400:
          description: Invaid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getSingleAsset:
    # binds a127 app logic to a route
    x-swagger-router-controller: asset
    get:
      tags:
      - asset
      summary: Retrieve list of assets
      description: Return list of assets by company id
      # used as the method name of the controller
      operationId: getSingleAsset
      parameters:
        - name: AssetID
          in: query
          description: Asset id
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetModel"
        # responses may fall through to errors
        400:
          description: Invaid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/addAsset:
    x-swagger-router-controller: asset
    post:
      tags:
      - asset
      summary: Add a new Asset
      description: Add a new asset
      # used as the method name of the controller
      operationId: addAsset
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats need to be added into table
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/updateAsset:
    x-swagger-router-controller: asset
    put:
      tags:
      - asset
      summary: update an existing Asset
      description: update an existing Asset 
      # used as the method name of the controller
      operationId: updateAsset
      parameters:
      - in: body
        name: body
        description: Asset object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/deleteAsset:
    x-swagger-router-controller: asset
    delete:
      tags:
      - asset
      summary: delete an existing Asset
      description: delete an existing Asset 
      # used as the method name of the controller
      operationId: deleteAsset
      parameters:
      - name: assetID
        in: query
        description: asset ID
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/login:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      security: []
      summary: log in
      description: logIn user
      # used as the method name of the controller
      operationId: logIn
      parameters:
      - in: body
        name: body
        description: User object thats need to be added
        required: true
        schema:
          $ref: '#/definitions/LogInModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/resetUser:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: resetUser in
      description: resetUser user
      # used as the method name of the controller
      operationId: resetUser
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
  /user/validateResetPasswordLink:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: resetUser in
      description: resetUser user
      # used as the method name of the controller
      operationId: validateResetPasswordLink
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      - name: VerificationCode
        in: query
        description: VerificationCode to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
  /user/updatePassword:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: updatePassword in
      description: updatePassword user
      # used as the method name of the controller
      operationId: updatePassword
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      - name: Password
        in: query
        description: VerificationCode to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
  /user/createUser:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      security: []
      summary: create a new user
      description: create a new user
      # used as the method name of the controller
      operationId: createUser
      parameters:
      - in: body
        name: body
        description: User object thats need to be added
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/updateUser:
    x-swagger-router-controller: userManage
    put:
      tags:
      - user
      summary: update a user
      description: update a user
      # used as the method name of the controller
      operationId: updateUser
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/deleteUser:
    x-swagger-router-controller: userManage
    delete:
      tags:
      - user
      summary: delete a user
      description: delete a user
      # used as the method name of the controller
      operationId: deleteUser
      parameters:
      - name: userID
        in: query
        description: User object thats need to be deleted
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/getSettings:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      summary: get all user settings
      description: get all user gettings
      # used as the method name of the controller
      operationId: getSettings
      parameters:
      - name: userID
        in: query
        description: get all user settings
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserSettings"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/updateSettings:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      summary: update all user settings
      description: update all user gettings
      # used as the method name of the controller
      operationId: updateSettings
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/activate:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: activate user
      description: activate user
      # used as the method name of the controller
      operationId: activate
      parameters:
      - name: UserID
        in: query
        description: User ID
        required: true
        type: string
      - name: ActivateKey
        in: query
        description: ActivateKey
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/getDevice:
    x-swagger-router-controller: deviceManage
    get:
      tags:
      - device
      summary: get all device
      description: get all device by AssetID
      # used as the method name of the controller
      operationId: getDevice
      parameters:
      - name: AssetID
        in: query
        description: User object thats need to be deleted
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DeviceModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/addDevice:
    x-swagger-router-controller: deviceManage
    post:
      tags:
      - device
      summary: create a new device
      description: create a new device
      # used as the method name of the controller
      operationId: addDevice
      parameters:
      - in: body
        name: body
        description: Device object thats need to be added
        required: true
        schema:
          $ref: '#/definitions/DeviceModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/updateDevice:
    x-swagger-router-controller: deviceManage
    put:
      tags:
      - device
      summary: update a Device
      description: update a Device
      # used as the method name of the controller
      operationId: updateDevice
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/DeviceModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/deleteDevice:
    x-swagger-router-controller: deviceManage
    delete:
      tags:
      - device
      summary: delete a Device
      description: delete a Device
      # used as the method name of the controller
      operationId: deleteDevice
      parameters:
      - name: DeviceID
        in: query
        description: Device object thats need to be deleted
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getSingleData:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      summary: get a single data 
      description:  get a single data by device id and timestamp
      # used as the method name of the controller
      operationId: getSingleData
      parameters:
      - name: DeviceID
        in: query
        description: Device object thats need to be deleted
        required: true
        type: string
      - name: TimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getSingleCalculatedData:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      summary: get a single data 
      description:  get a single data by Asset ID and time stamp
      # used as the method name of the controller
      operationId: getSingleCalculatedData
      parameters:
      - name: AssetID
        in: query
        description: Device object thats need to be deleted
        required: true
        type: string
      - name: TimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CalculatedDataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getMultipleCalculatedData:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      summary: get multiple calculated data
      description:  get multiple calculated data
      # used as the method name of the controller
      operationId: getMultipleCalculatedData
      parameters:
      - name: AssetID
        in: query
        description: Asset ID
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CalculatedDataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getMultipleCalculatedDataWithParameter:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      summary: get multiple calculated data
      description:  get multiple calculated data
      # used as the method name of the controller
      operationId: getMultipleCalculatedDataWithParameter
      parameters:
      - name: AssetID
        in: query
        description: Asset ID
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      - name: ParameterName
        in: query
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CalculatedDataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getMultipleData:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      summary: get multiple data 
      description:  get multiple data by device id and timestamp
      # used as the method name of the controller
      operationId: getMultipleData
      parameters:
      - name: DeviceID
        in: query
        description: Device object thats need to be deleted
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/DataModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions

definitions:
  AssetModel:
    type: object
    properties:
      UserID:
        type: string
      AssetID:
        type: string
      AddTimeStamp:
        type: integer
      DisplayName:
        type: string
      LastestTimeStamp:
        type: integer
  LogInModel:
    type: object
    properties:
      EmailAddress:
        type: string
      Password:
        type: string
  UserModel:
    type: object
    properties:
      UserID:
        type: string
      Active:
        type: number
      EmailAddress:
        type: string
      Password:
        type: string
  CalculatedDataModel:
    type: object
    properties:
      AssetID:
        type: string
      EpochTimeStamp:
        type: integer
  DataModel:
    type: object
    properties:
      DeviceID:
        type: string
      EpochTimeStamp:
        type: integer
      Data:
        type: number
  DeviceModel:
    type: object
    properties:
      DeviceID:
        type: string
      Type:
        type: string
      AssetID:
        type: string
      Location:
        type: string
      Location_Display:
        type: string
      LinkDeviceID:
        type: string
      Tag:
        type: string
  UserSettings:
    type: object
    properties:
      SettingName:
        type: string
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
